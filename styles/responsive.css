* {
  box-sizing: border-box;
}

.grid {
  display: grid;
  gap: 5px;
  grid-auto-rows: 1fr;
  grid-auto-columns: auto;
  grid-auto-flow: dense;

  width: 300px;

  counter-reset: num;

  outline: 2px solid red;
  vertical-align: top;
  margin: 10px auto;
}

.grid * {
  background-color: lightgray;
  border: 1px solid;

  font-size: 30px;
  font-family: sans-serif;

  display: grid;
  place-content: center;
}

.grid *::before {
  content: counter(num);
  counter-increment: num;
}

.grid :nth-child(2) {
  grid-column: 2;
}

@media screen and (min-width: 600px) {
  .grid :nth-child(6n + 2) {
    grid-column: 3;
  }

  .grid :nth-child(6n + 5) {
    grid-column: 1;
  }

  .grid :nth-child(6n + 1),
  .grid :nth-child(6n + 6) {
    grid-area: span 2 / span 2;
  }
}

@media screen and (min-width: 1024px) {
  .grid :nth-child(6n + 1),
  .grid :nth-child(6n + 6),
  .grid :nth-child(6n + 5) {
    grid-area: auto;
  }

  .grid :nth-child(10n + 3) {
    grid-column: 4;
  }

  .grid :nth-child(10n + 8) {
    grid-column: 1;
  }

  .grid :nth-child(10n + 9) {
    grid-column: 2;
  }

  .grid :nth-child(10n + 1),
  .grid :nth-child(10n + 10) {
    grid-area: span 2 / span 2;
  }
}

/* ! Person Alternative Solution */
.grid-container {
  padding: 10px;

  display: grid;
  grid-gap: 10px;
  grid-auto-rows: 1fr;
  grid-template-columns: repeat(2, 1fr);
  grid-auto-flow: dense;

  counter-reset: albumList;

  max-width: 400px;
  margin-inline: auto;
}

.item {
  aspect-ratio: 1;
  background: #ccc;
  display: flex;
}

/* Number */
.item:before {
  counter-increment: albumList;
  content: counter(albumList);
  margin: auto;
  font-size: 40px;
  color: #000000;
}

@media screen and (min-width: 40em) and (max-width: 63.99875em) {
  /* 640 ~ 1023 */
  .grid-container {
    grid-template-columns: repeat(3, 1fr);
  }
  .item:nth-child(6n + 1),
  .item:nth-child(6n + 6) {
    grid-area: span 2 / span 2;
  }
  .item:nth-child(6n + 5) {
    grid-column: 1;
  }
}

@media print, screen and (min-width: 64em) {
  /* 1024+ */
  .grid-container {
    grid-template-columns: repeat(4, 1fr);
  }
  .item:nth-child(10n + 1),
  .item:nth-child(10n + 10) {
    grid-area: span 2 / span 2;
  }
  .item:nth-child(10n + 8) {
    grid-column: 1;
  }
  .item:nth-child(10n + 9) {
    grid-column: 2;
  }
}
